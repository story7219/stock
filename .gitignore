# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# ============================================================================
# 🚨 민감한 정보 및 보안 파일들
# ============================================================================

# API 키 및 인증 정보
*.key
*.pem
*.p12
*.pfx
api_keys.txt
secrets.json
credentials.json
.env.local
.env.production
.env.staging

# 데이터베이스 파일
*.db
*.sqlite
*.sqlite3
*.db-shm
*.db-wal

# 로그 파일
*.log
logs/
*.log.*

# 캐시 파일
cache/
*.cache
.cache/

# 임시 파일
*.tmp
*.temp
*.bak
*.backup
*~

# 수집된 데이터
collected_data/
data/
historical_data/
market_data/

# 모델 파일
models/
*.h5
*.hdf5
*.pkl
*.pickle
*.joblib

# ML 관련
mlruns/
.mlflow/
wandb/

# 백업 파일
backup/
backup_*
*.backup

# 성능 메트릭
performance_metrics/
metrics/

# 테스트 데이터
test_data/
sample_data/

# 개발 중인 파일
*.dev
*.test
*.experimental

# 시스템 파일
.DS_Store
Thumbs.db
desktop.ini

# IDE 설정
.vscode/
.idea/
*.swp
*.swo
*~

# 네트워크 설정
network_config/
proxy_settings/

# 트레이딩 관련 민감 정보
trading_config/
broker_config/
account_info/
portfolio_data/

# ============================================================================
# 📊 데이터 파일들 (용량이 큰 파일들)
# ============================================================================

# 대용량 데이터 파일
*.parquet
*.csv
*.json
*.xml
*.xlsx
*.xls

# 압축 파일
*.zip
*.tar
*.gz
*.bz2
*.7z

# 미디어 파일
*.mp4
*.avi
*.mov
*.wmv
*.flv

# 이미지 파일 (대용량)
*.png
*.jpg
*.jpeg
*.gif
*.bmp
*.tiff

# ============================================================================
# 🔧 개발 환경 관련
# ============================================================================

# 가상환경
venv/
env/
.venv/

# 패키지 관리
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# 운영체제
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# ============================================================================
# 📈 트레이딩 시스템 특화
# ============================================================================

# 실시간 데이터
realtime_data/
streaming_data/
live_data/

# 백테스트 결과
backtest_results/
backtest_output/

# 성능 분석 결과
performance_analysis/
risk_analysis/

# 알림 및 로그
notifications/
alerts/
telegram_logs/

# 설정 파일 (개인화된 설정)
personal_config/
user_settings/
local_config/