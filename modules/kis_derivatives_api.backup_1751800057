```python
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
한투 OpenAPI 실시간 시스템 - 국내 파생상품 실시간 데이터 통합 관리 모듈
=====================================================================
실전/모의투자 자동 분리, REST+웹소켓 통합, 예외처리, 콜백 구조, 유지보수성
커서룰 100% 적용: 최신 Python 문법, 함수/클래스 분리, 한글 주석, 방어코드, 성능/안정성/테스트
"""

import asyncio
import logging
import json
import websockets
import aiohttp
import hmac
import hashlib
import base64
import time
from datetime import datetime, timedelta
from typing import Dict, List, Any, Optional, Union
from dataclasses import dataclass, field
from collections import deque
import os
import sqlite3
import threading
from concurrent.futures import ThreadPoolExecutor
from dotenv import load_dotenv

load_dotenv()

# 로깅 설정
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('kis_derivatives_api.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

@dataclass
class TokenInfo:
    """토큰 정보 관리 클래스"""
    access_token: str
    token_type: str = "Bearer"
    expires_in: int = 86400
    created_at: datetime = field(default_factory=datetime.now)
    refresh_count: int = 0
    
    @property
    def is_expired(self) -> bool:
        """토큰 만료 여부 확인 (만료 10분 전 갱신)"""
        expiry_time = self.created_at + \
                      timedelta(seconds=self.expires_in - 600)
        return datetime.now() >= expiry_time
    
    @property
    def time_until_expiry(self) -> timedelta:
        """만료까지 남은 시간"""
        return (self.created_at + timedelta(seconds=self.expires_in)) \
               - datetime.now()

# ... (나머지 코드는 동일)
```
