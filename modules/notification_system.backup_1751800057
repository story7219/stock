```python
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
📱 실시간 알림 시스템 v2.0
텔레그램 알림 및 로깅 지원
"""

import asyncio
import logging
import json
from datetime import datetime, timedelta
from typing import Dict, List, Any, Optional
from dataclasses import dataclass, asdict
import requests
import telegram
from telegram import Bot
import os
from pathlib import Path

logger = logging.getLogger(__name__)

@dataclass
class NotificationConfig:
    """알림 설정 데이터 클래스"""
    telegram_enabled: bool = True
    telegram_bot_token: str = ""
    telegram_chat_id: str = ""

@dataclass
class NotificationMessage:
    """알림 메시지 데이터 클래스"""
    title: str
    content: str
    priority: str  # HIGH, MEDIUM, LOW
    category: str  # TRADE, ANALYSIS, SYSTEM, ERROR
    timestamp: datetime
    symbols: List[str] = None
    image_path: Optional[str] = None
    action_required: bool = False

class NotificationSystem:
    """실시간 알림 시스템"""
    
    def __init__(self, config: Optional[Dict[str, Any]] = None):
        """알림 시스템 초기화"""
        self.config = config or {
            'telegram_enabled': False,
            'default_level': 'INFO'
        }
        self.notification_queue = asyncio.Queue()
        self.is_running = False
        logger.info("알림 시스템 초기화 완료")
        self.telegram_bot = None
        self.message_queue = asyncio.Queue()
        self.sent_messages = {}  # 중복 방지
        self.initialize_services()
    
    def initialize_services(self):
        """알림 서비스 초기화"""
        try:
            if self.config.get('telegram_enabled') and self.config.get(
                'telegram_bot_token'
            ):
                self.telegram_bot = Bot(token=self.config['telegram_bot_token'])
                logger.info("텔레그램 봇 초기화 완료")
        except Exception as e:
            logger.error(f"알림 서비스 초기화 오류: {e}")
    
    async def send_notification(self, message: str, level: str = "INFO"):
        """알림 전송 (테스트용 간단 버전)"""
        try:
            logger.info(f"알림 전송: [{level}] {message}")
            notification_data = {
                'message': message,
                'level': level,
                'timestamp': datetime.now().isoformat(),
                'status': 'sent'
            }
            await self.notification_queue.put(notification_data)
            logger.info("알림 전송 완료")
            return True
        except Exception as e:
            logger.error(f"알림 전송 중 오류: {e}")
            return False
    
    # ... (나머지 코드는 동일)
```
