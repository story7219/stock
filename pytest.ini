[tool:pytest]
# pytest 설정 파일
# Stock Analysis System Test Configuration

# 테스트 디렉토리
testpaths = tests

# 최소 Python 버전
minversion = 7.0

# 기본 옵션
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=term-missing:skip-covered
    --cov-report=html:reports/coverage
    --cov-report=xml:reports/coverage.xml
    --cov-fail-under=90
    --disable-warnings
    --tb=short
    -x
    -v

# 테스트 파일 패턴
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# 마커 정의
markers =
    unit: 단위 테스트
    integration: 통합 테스트
    slow: 실행 시간이 긴 테스트
    network: 네트워크 연결이 필요한 테스트
    ai: AI 모델을 사용하는 테스트

# 경고 필터
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# 비동기 테스트 설정
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# 로그 설정
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 테스트 발견 설정
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    .venv
    venv
    __pycache__
    .pytest_cache
    htmlcov
    logs
    data
    reports
    backups

# 커버리지 설정
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__init__.py
    */conftest.py
    .venv/*
    venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if DEBUG:
    if settings.DEBUG

[coverage:html]
directory = htmlcov
title = Stock Analysis System Coverage Report

# 테스트 수집 시간초과
timeout = 300 