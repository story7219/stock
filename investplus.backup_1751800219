# investplus.py - Test Î™®Îìà
# Ïó≠Ìï†: Test Í¥ÄÎ†® Í∏∞Îä• Ï†úÍ≥µ

```python
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üöÄ Ìñ•ÏÉÅÎêú AI Ìà¨Ïûê Î∂ÑÏÑù ÏãúÏä§ÌÖú v4.0
=====================================
Î™®Îì† ÌôòÍ≤Ω Î≥ÄÏàòÎ•º ÌôúÏö©Ìïú ÏôÑÏ†ÑÌïú Ìà¨Ïûê ÏãúÏä§ÌÖú
- Gemini AI Í≥†Í∏â Î∂ÑÏÑù
- ÌÖîÎ†àÍ∑∏Îû® Ïã§ÏãúÍ∞Ñ ÏïåÎ¶º
- ÌïúÍµ≠Ìà¨ÏûêÏ¶ùÍ∂å API Ïó∞Îèô
- DART Í≥µÏãúÏ†ïÎ≥¥ ÌôúÏö©
- Google Ïä§ÌîÑÎ†àÎìúÏãúÌä∏ Ïó∞Îèô
- Í≥†Í∏â Í∏∞Ïà†Ï†Å Î∂ÑÏÑù
"""

import os
import asyncio
import logging
from datetime import datetime, timedelta
from typing import Dict, List, Any, Optional, Tuple
from dataclasses import dataclass, field
import json
import pandas as pd
import numpy as np
from pathlib import Path

# ÌôòÍ≤Ω Î≥ÄÏàò Î°úÎìú
from dotenv import load_dotenv
load_dotenv()

# AI Î∞è API ÎùºÏù¥Î∏åÎü¨Î¶¨
import google.generativeai as genai
import yfinance as yf
import requests
from telegram import Bot
import gspread
from google.oauth2.service_account import Credentials

# ÎÇ¥Î∂Ä Î™®Îìà
from .core.optimized_core import get_core
from .modules.unified_data_processor import get_processor
from .modules.optimized_investment_strategies import get_strategy_engine
from .modules.notification_system import NotificationSystem
from .modules.technical_analysis import TechnicalAnalyzer
from .modules.derivatives_monitor import get_derivatives_monitor, DerivativesMonitor

logger = logging.getLogger(__name__)

@dataclass
class EnvironmentConfig:
    """ÌôòÍ≤Ω Î≥ÄÏàò ÏÑ§Ï†ï"""
    # Gemini AI ÏÑ§Ï†ï
    gemini_api_key: str = ""
    gemini_model: str = "gemini-1.5-flash-8B"
    gemini_temperature: float = 0.03
    gemini_max_tokens: int = 8192
    
    # ÌÖîÎ†àÍ∑∏Îû® ÏÑ§Ï†ï
    telegram_bot_token: str = ""
    telegram_chat_id: str = ""
    
    # ÌïúÍµ≠Ìà¨ÏûêÏ¶ùÍ∂å API
    kis_app_key: str = ""
    kis_app_secret: str = ""
    kis_account_number: str = ""
    
    # DART API
    dart_api_key: str = ""
    
    # Google ÏÑúÎπÑÏä§
    google_service_account_file: str = ""
    google_spreadsheet_id: str = ""
    google_worksheet_name: str = ""
    
    # GitHub API
    github_api_token: str = ""
    
    # ZAPIER NLA API
    zapier_nla_api_key: str = ""
    
    # Í∏∞ÌÉÄ ÏÑ§Ï†ï
    is_mock: bool = True
    log_level: str = "INFO"
    
    @classmethod
    def from_env(cls) -> "EnvironmentConfig":
        """ÌôòÍ≤Ω Î≥ÄÏàòÏóêÏÑú ÏÑ§Ï†ï Î°úÎìú"""
        return cls(
            gemini_api_key=os.getenv('GEMINI_API_KEY', ''),
            gemini_model=os.getenv('GEMINI_MODEL', 'gemini-1.5-flash-8B'),
            gemini_temperature=float(os.getenv('GEMINI_TEMPERATURE', '0.03')),
            gemini_max_tokens=int(os.getenv('GEMINI_MAX_TOKENS', '8192')),
            telegram_bot_token=os.getenv('TELEGRAM_BOT_TOKEN', ''),
            telegram_chat_id=os.getenv('TELEGRAM_CHAT_ID', ''),
            kis_app_key=os.getenv('LIVE_KIS_APP_KEY', ''),
            kis_app_secret=os.getenv('LIVE_KIS_APP_SECRET', ''),
            kis_account_number=os.getenv('LIVE_KIS_ACCOUNT_NUMBER', ''),
            dart_api_key=os.getenv('DART_API_KEY', ''),
            google_service_account_file=os.getenv('GOOGLE_SERVICE_ACCOUNT_FILE', ''),
            google_spreadsheet_id=os.getenv('GOOGLE_SPREADSHEET_ID', ''),
            google_worksheet_name=os.getenv('GOOGLE_WORKSHEET_NAME', ''),
            github_api_token=os.getenv('GITHUB_API_TOKEN', ''),
            zapier_nla_api_key=os.getenv('ZAPIER_NLA_API_KEY', ''),
            is_mock=os.getenv('IS_MOCK', 'true').lower() == 'true',
            log_level=os.getenv('LOG_LEVEL', 'INFO')
        )

# ... (rest of the code)
```
