```python
"""
🧪 통합 신호 생성 시스템 테스트 스크립트
================================================================
파일명: test_unified_signals.py
역할: ML/DL/Gemini AI 상호보완 신호 생성 시스템을 테스트하는 스크립트
- 개별 신호 생성기 테스트
- 통합 신호 생성 테스트
- 배치 처리 테스트
- 성능 테스트
"""

import asyncio
import logging
import time
from typing import Dict, List, Any, Union, Tuple, Literal
from pathlib import Path

# 프로젝트 모듈 임포트
from modules.unified_signal_generator import (
    UnifiedSignalGenerator,
    MLSignalGenerator,
    DLSignalGenerator,
    GeminiSignalGenerator,
    SignalWeights,
    SignalResult
)

# 로깅 설정
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s | %(levelname)-8s | %(name)-20s | %(message)s'
)
logger = logging.getLogger(__name__)

class UnifiedSignalTester:
    """통합 신호 생성 시스템 테스터"""

    def __init__(self):
        self.test_symbols = ["AAPL", "MSFT", "GOOGL", "TSLA", "NVDA"]
        self.test_config = {
            'ml_weight': 0.4,
            'dl_weight': 0.3,
            'gemini_weight': 0.3,
            'threshold': 0.6,
            'min_confidence': 0.5
        }

    # ... (나머지 코드는 동일)

    async def test_unified_generator(self):
        """통합 신호 생성기 테스트"""
        logger.info("🚀 통합 신호 생성기 테스트 시작")

        # 통합 신호 생성기 초기화
        generator = UnifiedSignalGenerator(self.test_config)

        # 단일 종목 테스트
        try:
            test_data = self.generate_test_data("AAPL")  # generate_test_data 함수 필요
            result: SignalResult = await generator.generate_unified_signal(
                symbol="AAPL",
                technical_data=test_data['technical'],
                news=test_data['news'],
                financial_data=test_data['financial']
            )
            # ... (나머지 코드는 동일)
        except Exception as e:
            logger.error(f"테스트 중 오류 발생: {e}")

        # ... (나머지 코드는 동일)


```