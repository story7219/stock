# ml_engine.py - Test 모듈
# 역할: Test 관련 기능 제공

```python
"""
머신러닝 모델 백테스팅 엔진
RMSE, MAPE, 샤프비율, 최대낙폭 등 다양한 평가 지표 제공
"""

import numpy as np
import pandas as pd
from typing import Dict, List, Tuple, Optional, Any
from dataclasses import dataclass
from datetime import datetime, timedelta
import logging
from collections import defaultdict

logger = logging.getLogger(__name__)


@dataclass
class BacktestTrade:
    """백테스트 거래 기록"""
    timestamp: datetime
    symbol: str
    side: str  # 'buy' or 'sell'
    quantity: int
    entry_price: float
    exit_price: Optional[float] = None
    exit_timestamp: Optional[datetime] = None
    pnl: float = 0.0
    pnl_percent: float = 0.0
    holding_period: int = 0
    commission: float = 0.0


@dataclass
class BacktestMetrics:
    """백테스트 평가 지표"""
    # 기본 통계
    total_trades: int
    winning_trades: int
    losing_trades: int
    win_rate: float
    
    # 수익률
    total_return: float
    annualized_return: float
    average_win: float
    average_loss: float
    profit_factor: float
    
    # 리스크 지표
    max_drawdown: float
    max_drawdown_duration: int
    sharpe_ratio: float
    sortino_ratio: float
    calmar_ratio: float
    
    # ML 평가 지표
    rmse: float
    mae: float
    mape: float
    directional_accuracy: float
    
    # 거래 통계
    avg_holding_period: float
    max_consecutive_wins: int
    max_consecutive_losses: int
    
    # 기간별 성과
    monthly_returns: Dict[str, float]
    daily_returns: pd.Series


class MLBacktestingEngine:
    """머신러닝 백테스팅 엔진"""
    
    def __init__(self, 
                 initial_capital: float = 100000000,  # 1억원
                 commission_rate: float = 0.00015,     # 0.015%
                 slippage_rate: float = 0.0005):      # 0.05%
        """
        Args:
            initial_capital: 초기 자본금
            commission_rate: 수수료율
            slippage_rate: 슬리피지율
        """
        self.initial_capital = initial_capital
        self.commission_rate = commission_rate
        self.slippage_rate = slippage_rate
        
        # 백테스트 상태
        self.reset()
        
        logger.info(f"✅ 백테스팅 엔진 초기화 (자본금: {initial_capital:,.0f}원)")
    
    def reset(self):
        """백테스트 상태 초기화"""
        self.capital = self.initial_capital
        self.positions = {}  # {symbol: {'quantity': int, 'avg_price': float}}
        self.trades = []
        self.equity_curve = []
        self.daily_returns = []
        self.predictions = []
        self.actuals = []
    
    def run_backtest(self, 
                    predictions: List[Dict[str, Any]], 
                    market_data: Dict[str, pd.DataFrame],
                    strategy_params: Optional[Dict[str, Any]] = None) -> BacktestMetrics:
        """
        백테스트 실행
        
        Args:
            predictions: 예측 결과 리스트
                [{'symbol': str, 'timestamp': datetime, 'prediction': float, 
                  'confidence': float, 'features': dict}, ...]
            market_data: 종목별 시장 데이터
            strategy_params: 전략 파라미터 (default 사용)
        Returns:
            백테스트 평가 지표
        """
        strategy_params = strategy_params or {
            'position_sizing': 'kelly',
            'max_position_size': 0.1,
            'stop_loss': 0.03,
            'take_profit': 0.05,
            'min_confidence': 0.65
        }
        # ... (나머지 코드 동일)
```