# config.py - Utility 모듈
# 역할: Utility 관련 기능 제공

```python
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
⚙️ 투자 분석 시스템 설정 관리 모듈 (System Configuration Manager)
================================================================

투자 분석 시스템의 모든 설정을 중앙에서 관리하는 핵심 모듈입니다.
데이터베이스, 캐시, API, 성능 최적화 등 시스템 운영에 필요한 
모든 설정을 체계적으로 관리합니다.

주요 구성 요소:
1. DatabaseConfig: 데이터베이스 연결 및 풀 설정
   - PostgreSQL 연결 정보
   - 연결 풀 크기 및 타임아웃 설정
   - 트랜잭션 관리 옵션

2. CacheConfig: 캐시 시스템 설정
   - Redis 캐시 서버 설정
   - 메모리 캐시 크기 및 TTL
   - 다단계 캐시 활성화 옵션

3. APIConfig: 외부 API 연동 설정
   - Gemini AI API 키 관리
   - Yahoo Finance API 설정
   - 요청 제한 및 재시도 정책

4. PerformanceConfig: 성능 최적화 설정
   - 비동기 처리 활성화
   - 워커 스레드 수 설정
   - 메모리 사용량 제한
   - 프로파일링 옵션

설정 로드 순서:
1. 기본값 설정
2. config.json 파일에서 로드
3. 환경 변수로 오버라이드
4. 설정 검증 수행

이 모듈은 시스템의 모든 설정을 일관되게 관리하며,
운영 환경에 따른 유연한 설정 변경을 지원합니다.
"""

import os
from typing import Dict, Any, Optional
from dataclasses import dataclass
from pathlib import Path
import json
import logging

logger = logging.getLogger(__name__)


@dataclass
class DatabaseConfig:
    host: str
    port: int
    database: str
    user: str
    password: str
    max_connections: int
    min_connections: int
    connection_timeout: int


@dataclass
class CacheConfig:
    host: str
    port: int
    db: int
    password: str
    max_memory: int
    ttl: int


@dataclass
class APIConfig:
    gemini_api_key: str
    yahoo_finance_api_key: str
    request_limit: int
    retry_count: int


@dataclass
class PerformanceConfig:
    max_workers: int
    memory_limit: int
    profile_mode: bool


@dataclass
class SystemConfig:
    debug_mode: bool
    mock_mode: bool
    log_level: str
    max_workers: int
    request_timeout: int

    @classmethod
    def from_env(cls) -> 'SystemConfig':
        return cls(
            debug_mode=os.getenv('DEBUG_MODE', 'false').lower() == 'true',
            mock_mode=os.getenv('IS_MOCK', 'false').lower() == 'true',
            log_level=os.getenv('LOG_LEVEL', 'INFO'),
            max_workers=int(os.getenv('MAX_WORKERS', '4')),
            request_timeout=int(os.getenv('REQUEST_TIMEOUT', '30'))
        )
```