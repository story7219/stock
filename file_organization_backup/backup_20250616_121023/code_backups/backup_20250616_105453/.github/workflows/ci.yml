name: 🤖 Advanced Trading Bot CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 코드 품질 검사
  quality-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: 🐍 Python 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📦 의존성 설치
      run: |
        pip install -r requirements.txt
        pip install black flake8 mypy pytest pytest-cov bandit safety
    
    - name: 🎨 코드 포맷팅 검사 (Black)
      run: black --check --diff src/
    
    - name: 🔍 린팅 검사 (Flake8)
      run: flake8 src/ --max-line-length=88 --extend-ignore=E203,W503
    
    - name: 🏷️ 타입 검사 (MyPy)
      run: mypy src/ --ignore-missing-imports
    
    - name: 🔒 보안 검사 (Bandit)
      run: bandit -r src/ -f json -o bandit-report.json
    
    - name: 🛡️ 취약점 검사 (Safety)
      run: safety check --json --output safety-report.json
    
    - name: 📊 테스트 실행
      run: |
        pytest tests/ --cov=src --cov-report=xml --cov-report=html
    
    - name: 📈 코드 커버리지 업로드
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  # 백테스팅
  backtest:
    runs-on: ubuntu-latest
    needs: quality-check
    steps:
    - uses: actions/checkout@v3
    
    - name: 🐍 Python 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📦 의존성 설치
      run: pip install -r requirements.txt
    
    - name: 📊 백테스팅 실행
      run: |
        python scripts/run_backtest.py --config config/backtest.yaml
        
    - name: 📈 성과 리포트 생성
      run: python scripts/generate_performance_report.py
    
    - name: 📋 결과 업로드
      uses: actions/upload-artifact@v3
      with:
        name: backtest-results
        path: reports/

  # 모의투자 테스트
  paper-trading:
    runs-on: ubuntu-latest
    needs: [quality-check, backtest]
    if: github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v3
    
    - name: 🎯 모의투자 실행
      env:
        MOCK_KIS_APP_KEY: ${{ secrets.MOCK_KIS_APP_KEY }}
        MOCK_KIS_APP_SECRET: ${{ secrets.MOCK_KIS_APP_SECRET }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        python src/trader.py --mode=paper --duration=1h 