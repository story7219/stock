{
  "timestamp": "2025-06-16T10:54:51.721580",
  "overall_score": 4.94,
  "file_metrics": [
    {
      "file_path": "advanced_trader.py",
      "lines_of_code": 58,
      "complexity": 2,
      "maintainability_index": 90.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "analyze.py",
      "lines_of_code": 20,
      "complexity": 3,
      "maintainability_index": 92.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "auto.py",
      "lines_of_code": 10,
      "complexity": 2,
      "maintainability_index": 95.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "auto_backtest.py",
      "lines_of_code": 149,
      "complexity": 16,
      "maintainability_index": 53.1,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (10개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "auto_quality_service.py",
      "lines_of_code": 353,
      "complexity": 39,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "auto_refactoring_system.py",
      "lines_of_code": 542,
      "complexity": 39,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (10개)"
      ],
      "security_issues": [
        "SQL 인젝션 위험 가능성"
      ],
      "performance_issues": []
    },
    {
      "file_path": "backtest.py",
      "lines_of_code": 195,
      "complexity": 24,
      "maintainability_index": 32.5,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (28개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "backtest_mixed.py",
      "lines_of_code": 47,
      "complexity": 5,
      "maintainability_index": 85.3,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (6개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "buffett_screener.py",
      "lines_of_code": 77,
      "complexity": 8,
      "maintainability_index": 76.3,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "buy.py",
      "lines_of_code": 54,
      "complexity": 6,
      "maintainability_index": 82.6,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "config.py",
      "lines_of_code": 71,
      "complexity": 3,
      "maintainability_index": 86.9,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (7개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "cycle.py",
      "lines_of_code": 62,
      "complexity": 15,
      "maintainability_index": 63.8,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (6개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "daytrader_screener.py",
      "lines_of_code": 62,
      "complexity": 10,
      "maintainability_index": 73.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "debug_gemini.py",
      "lines_of_code": 36,
      "complexity": 7,
      "maintainability_index": 82.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "fetch_and_backtest.py",
      "lines_of_code": 49,
      "complexity": 4,
      "maintainability_index": 87.1,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (9개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "full_cycle_test.py",
      "lines_of_code": 244,
      "complexity": 31,
      "maintainability_index": 13.6,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (8개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "google_sheets_integration.py",
      "lines_of_code": 326,
      "complexity": 46,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (10개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "kis_api.py",
      "lines_of_code": 564,
      "complexity": 64,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (13개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "kis_api_client.py",
      "lines_of_code": 155,
      "complexity": 10,
      "maintainability_index": 64.5,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (9개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "kis_trading_system.py",
      "lines_of_code": 68,
      "complexity": 9,
      "maintainability_index": 75.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "main.py",
      "lines_of_code": 58,
      "complexity": 9,
      "maintainability_index": 76.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "market_analyzer.py",
      "lines_of_code": 455,
      "complexity": 61,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (26개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "minervini_screener.py",
      "lines_of_code": 82,
      "complexity": 7,
      "maintainability_index": 77.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "monday_auto.py",
      "lines_of_code": 26,
      "complexity": 4,
      "maintainability_index": 89.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "oneil_scanner.py",
      "lines_of_code": 275,
      "complexity": 37,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (8개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "portfolio.py",
      "lines_of_code": 156,
      "complexity": 14,
      "maintainability_index": 56.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "quality_analyzer.py",
      "lines_of_code": 476,
      "complexity": 68,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "중복된 메인 블록"
      ],
      "security_issues": [
        "SQL 인젝션 위험 가능성",
        "eval() 함수 사용으로 인한 보안 위험"
      ],
      "performance_issues": []
    },
    {
      "file_path": "quick_test.py",
      "lines_of_code": 46,
      "complexity": 7,
      "maintainability_index": 81.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "run.py",
      "lines_of_code": 21,
      "complexity": 4,
      "maintainability_index": 89.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "run_analysis.py",
      "lines_of_code": 96,
      "complexity": 26,
      "maintainability_index": 38.4,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (9개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "run_quality_check.py",
      "lines_of_code": 45,
      "complexity": 6,
      "maintainability_index": 83.5,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "run_test_now.py",
      "lines_of_code": 37,
      "complexity": 4,
      "maintainability_index": 88.3,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "scalping_trader.py",
      "lines_of_code": 215,
      "complexity": 40,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (10개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "secure_config.py",
      "lines_of_code": 21,
      "complexity": 2,
      "maintainability_index": 93.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "sell.py",
      "lines_of_code": 90,
      "complexity": 13,
      "maintainability_index": 65.0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (6개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "simple_test.py",
      "lines_of_code": 105,
      "complexity": 13,
      "maintainability_index": 63.5,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "system_check.py",
      "lines_of_code": 19,
      "complexity": 2,
      "maintainability_index": 94.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test.py",
      "lines_of_code": 41,
      "complexity": 4,
      "maintainability_index": 87.9,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (13개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test_buy.py",
      "lines_of_code": 30,
      "complexity": 4,
      "maintainability_index": 89.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test_google_sheets.py",
      "lines_of_code": 178,
      "complexity": 15,
      "maintainability_index": 52.2,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (7개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test_improved.py",
      "lines_of_code": 750,
      "complexity": 75,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (65개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test_sell.py",
      "lines_of_code": 114,
      "complexity": 14,
      "maintainability_index": 60.6,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (6개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test_setup.py",
      "lines_of_code": 73,
      "complexity": 9,
      "maintainability_index": 74.7,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test_simple.py",
      "lines_of_code": 140,
      "complexity": 19,
      "maintainability_index": 48.0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (38개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trade.py",
      "lines_of_code": 337,
      "complexity": 27,
      "maintainability_index": 12.3,
      "test_coverage": 0.0,
      "code_smells": [
        "긴 함수 발견 (50줄 초과)",
        "긴 함수 발견 (50줄 초과)",
        "매직 넘버 과다 사용 (14개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trader.py",
      "lines_of_code": 982,
      "complexity": 174,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (49개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "zapier_mcp_server.py",
      "lines_of_code": 14,
      "complexity": 2,
      "maintainability_index": 94.6,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "analysis\\gemini_analyzer.py",
      "lines_of_code": 107,
      "complexity": 9,
      "maintainability_index": 71.3,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "analysis\\market_analyzer.py",
      "lines_of_code": 129,
      "complexity": 22,
      "maintainability_index": 43.1,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (7개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "analysis\\__init__.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "data\\fetcher.py",
      "lines_of_code": 364,
      "complexity": 62,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (51개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "data\\preprocess.py",
      "lines_of_code": 9,
      "complexity": 1,
      "maintainability_index": 97.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "data\\__init__.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "reporting\\reporter.py",
      "lines_of_code": 148,
      "complexity": 21,
      "maintainability_index": 43.2,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (16개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\config.py",
      "lines_of_code": 46,
      "complexity": 3,
      "maintainability_index": 89.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\main.py",
      "lines_of_code": 71,
      "complexity": 10,
      "maintainability_index": 72.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\simple_trader.py",
      "lines_of_code": 92,
      "complexity": 10,
      "maintainability_index": 70.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\base_strategy.py",
      "lines_of_code": 65,
      "complexity": 6,
      "maintainability_index": 81.5,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\fibonacci_strategy.py",
      "lines_of_code": 199,
      "complexity": 29,
      "maintainability_index": 22.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\scout_strategy.py",
      "lines_of_code": 180,
      "complexity": 24,
      "maintainability_index": 34.0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (11개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\strategy_executor.py",
      "lines_of_code": 253,
      "complexity": 32,
      "maintainability_index": 10.7,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\technical_analyzer.py",
      "lines_of_code": 136,
      "complexity": 30,
      "maintainability_index": 26.4,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (7개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\__init__.py",
      "lines_of_code": 16,
      "complexity": 1,
      "maintainability_index": 96.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\gemini_signal.py",
      "lines_of_code": 52,
      "complexity": 7,
      "maintainability_index": 80.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\long_term_scanner.py",
      "lines_of_code": 38,
      "complexity": 9,
      "maintainability_index": 78.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\long_term_strategy.py",
      "lines_of_code": 56,
      "complexity": 12,
      "maintainability_index": 70.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [
        "SQL 인젝션 위험 가능성"
      ],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\prompts.py",
      "lines_of_code": 35,
      "complexity": 2,
      "maintainability_index": 92.5,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\short_term_scanner.py",
      "lines_of_code": 34,
      "complexity": 7,
      "maintainability_index": 82.6,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\short_term_strategy.py",
      "lines_of_code": 79,
      "complexity": 18,
      "maintainability_index": 56.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\__init__.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "tests\\performance_analyzer.py",
      "lines_of_code": 140,
      "complexity": 13,
      "maintainability_index": 60.0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (8개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "tests\\run_backtest.py",
      "lines_of_code": 227,
      "complexity": 39,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (9개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trading\\executor.py",
      "lines_of_code": 81,
      "complexity": 8,
      "maintainability_index": 75.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trading\\kis_api.py",
      "lines_of_code": 190,
      "complexity": 25,
      "maintainability_index": 31.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trading\\trader.py",
      "lines_of_code": 169,
      "complexity": 36,
      "maintainability_index": 11.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trading\\__init__.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\chart_generator.py",
      "lines_of_code": 79,
      "complexity": 9,
      "maintainability_index": 74.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\gspread_client.py",
      "lines_of_code": 88,
      "complexity": 12,
      "maintainability_index": 67.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\logger.py",
      "lines_of_code": 42,
      "complexity": 9,
      "maintainability_index": 77.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\parser.py",
      "lines_of_code": 21,
      "complexity": 3,
      "maintainability_index": 91.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\system_utils.py",
      "lines_of_code": 12,
      "complexity": 2,
      "maintainability_index": 94.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\telegram_bot.py",
      "lines_of_code": 72,
      "complexity": 15,
      "maintainability_index": 62.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\throttle.py",
      "lines_of_code": 16,
      "complexity": 2,
      "maintainability_index": 94.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\__init__.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\core\\data_manager.py",
      "lines_of_code": 46,
      "complexity": 4,
      "maintainability_index": 87.4,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (12개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\core\\notifier.py",
      "lines_of_code": 68,
      "complexity": 12,
      "maintainability_index": 69.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\core\\order_executor.py",
      "lines_of_code": 256,
      "complexity": 28,
      "maintainability_index": 18.4,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (11개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\core\\trader.py",
      "lines_of_code": 321,
      "complexity": 61,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\core\\__init__.py",
      "lines_of_code": 8,
      "complexity": 1,
      "maintainability_index": 97.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\monitoring\\advanced_monitor.py",
      "lines_of_code": 68,
      "complexity": 9,
      "maintainability_index": 75.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\strategies\\fibonacci_strategy.py",
      "lines_of_code": 32,
      "complexity": 5,
      "maintainability_index": 86.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\strategies\\scout_strategy.py",
      "lines_of_code": 68,
      "complexity": 9,
      "maintainability_index": 75.2,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (21개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\strategies\\technical_analyzer.py",
      "lines_of_code": 74,
      "complexity": 6,
      "maintainability_index": 80.6,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\strategies\\__init__.py",
      "lines_of_code": 7,
      "complexity": 1,
      "maintainability_index": 97.3,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\utils\\helpers.py",
      "lines_of_code": 11,
      "complexity": 2,
      "maintainability_index": 94.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\utils\\logger.py",
      "lines_of_code": 53,
      "complexity": 5,
      "maintainability_index": 84.7,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\utils\\__init__.py",
      "lines_of_code": 6,
      "complexity": 1,
      "maintainability_index": 97.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\advanced_ai_reviewer.py",
      "lines_of_code": 280,
      "complexity": 43,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\ai_code_analyzer.py",
      "lines_of_code": 134,
      "complexity": 25,
      "maintainability_index": 36.6,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\ai_reviewer.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\auto_refactor.py",
      "lines_of_code": 158,
      "complexity": 31,
      "maintainability_index": 22.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\code_structure_analyzer.py",
      "lines_of_code": 279,
      "complexity": 34,
      "maintainability_index": 4.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\quality_check.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    }
  ],
  "gemini_analysis": "## Python 프로젝트 코드 품질 분석 결과 및 개선 제안\n\n제공된 코드 품질 분석 데이터를 바탕으로 프로젝트의 전반적인 상태를 평가하고, 구체적인 개선 방향을 제시합니다.\n\n**1. 전체적인 코드 품질 평가 (1-10점): 6.5점**\n\n* **긍정적인 측면:**\n    * 총 파일 수 대비 코드 라인 수가 비교적 적어, 전반적으로 과도하게 비대한 코드는 아닌 것으로 판단됩니다.\n    * 평균 유지보수성이 54.94점으로, 중간 수준 이상을 유지하고 있습니다.\n\n* **부정적인 측면:**\n    * 평균 복잡도가 17.23점으로, 상당 부분의 코드에서 복잡성이 높을 가능성이 있습니다.\n    * 총 코드 스멜이 36개, 보안 이슈가 4개 존재하며, 코드 품질 개선 및 보안 강화가 필요합니다.\n    * `trader.py`의 복잡도가 174로 매우 높아 집중적인 개선이 필요합니다.\n\n**2. 주요 문제점과 개선 방향:**\n\n* **높은 복잡도:** 함수 또는 클래스 내부에 너무 많은 기능이 구현되어 있을 가능성이 높습니다.\n    * **개선 방향:** 함수/클래스를 더 작고 명확한 역할로 분리 (Single Responsibility Principle), 중복 코드 제거, 알고리즘 개선 등을 통해 복잡도를 낮춰야 합니다.\n* **코드 스멜:** 중복 코드, 긴 함수, 긴 파라미터 목록, 매직 넘버, 과도한 결합 등 다양한 문제점을 내포할 수 있습니다.\n    * **개선 방향:** 코드 스멜 종류에 따라 적절한 리팩토링 기법 적용 (예: 중복 코드 제거, 함수 분리, 상수 사용 등). 코드 스멜 분석 도구 (예: pylint, flake8)를 활용하여 자동으로 코드 스멜을 탐지하고 수정하는 것이 좋습니다.\n* **보안 이슈:** SQL Injection, Cross-Site Scripting (XSS), 민감 정보 노출 등 다양한 보안 취약점을 의미할 수 있습니다.\n    * **개선 방향:** 보안 취약점 분석 도구 (예: bandit, snyk)를 활용하여 코드 내 보안 취약점 탐지 및 수정. 입력값 검증 강화, 안전한 API 사용, 암호화 등의 보안 기법 적용.\n* **문제 파일 집중:** 특정 파일 (특히 `trader.py`)에 문제점이 집중되어 있습니다.\n    * **개선 방향:** 해당 파일들의 코드를 면밀히 분석하여 문제 원인을 파악하고, 집중적인 리팩토링을 수행해야 합니다.\n\n**3. 우선순위별 리팩토링 권장사항:**\n\n1. **최우선:** `trader.py` 파일 리팩토링 (높은 복잡도).  함수 분리, 클래스 분리, 디자인 패턴 적용 등을 고려하여 복잡도를 낮추고 유지보수성을 높입니다.\n2. **우선:** `quality_analyzer.py` 파일의 보안 이슈 해결.  보안 취약점 분석 도구를 사용하여 구체적인 문제점을 파악하고, 안전한 코드로 수정합니다.\n3. **중요:** `test_improved.py`, `kis_api.py`, `data\\fetcher.py` 파일의 복잡도 및 코드 스멜 개선.  코드를 읽기 쉽고 이해하기 쉽게 만들고, 잠재적인 버그를 예방합니다.\n4. **일반:** 전체 코드베이스의 코드 스멜 분석 및 수정.  자동화된 도구를 활용하여 코드 품질을 꾸준히 관리합니다.\n\n**4. 코드 아키텍처 개선 제안:**\n\n* **모듈화 및 패키지화:** 기능별로 모듈을 분리하고, 관련 모듈들을 패키지로 묶어 관리합니다. 이는 코드의 재사용성을 높이고, 의존성을 관리하기 용이하게 합니다.\n* **계층화 아키텍처:** 프레젠테이션 계층, 비즈니스 로직 계층, 데이터 접근 계층 등으로 구분하여 각 계층의 역할을 명확하게 합니다.  이를 통해 코드의 유지보수성을 높이고, 변경에 대한 영향을 최소화할 수 있습니다.\n* **디자인 패턴 적용:**  GoF 디자인 패턴을 프로젝트에 적절히 적용하여 코드의 설계 품질을 향상시킵니다 (예: Strategy 패턴, Factory 패턴, Observer 패턴).\n* **API 설계 개선:** RESTful API 디자인 원칙을 준수하여 API를 설계하고, API 문서화를 철저히 합니다.\n* **의존성 주입 (Dependency Injection):** 코드의 결합도를 낮추고 테스트 용이성을 높입니다.\n\n**5. 성능 최적화 방안:**\n\n* **병목 지점 파악:** 프로파일링 도구 (예: cProfile)를 사용하여 코드 실행 시간을 분석하고, 성능 병목 지점을 파악합니다.\n* **알고리즘 개선:** 비효율적인 알고리즘을 효율적인 알고리즘으로 개선합니다.\n* **캐싱:** 자주 사용되는 데이터를 캐싱하여 데이터 접근 시간을 줄입니다.  Redis, Memcached 등 캐싱 솔루션 활용을 고려합니다.\n* **비동기 처리:** I/O 작업, 네트워크 통신 등을 비동기적으로 처리하여 프로그램의 응답성을 높입니다.  asyncio 라이브러리를 활용합니다.\n* **데이터베이스 쿼리 최적화:** 데이터베이스 쿼리 성능을 개선합니다.  인덱스 사용, 쿼리 튜닝 등을 통해 데이터 접근 속도를 향상시킵니다.\n* **불필요한 객체 생성 최소화:** 객체 생성이 많은 부분을 파악하고, 객체 풀링 등의 기법을 사용하여 객체 생성 비용을 줄입니다.\n\n**6. 보안 강화 방안:**\n\n* **입력값 검증 강화:** 사용자로부터 입력받는 모든 데이터에 대해 유효성 검사를 수행하여 악의적인 입력 (예: SQL Injection, XSS)을 차단합니다.\n* **출력값 인코딩:** 사용자에게 출력하는 데이터에 대해 적절한 인코딩을 적용하여 XSS 공격을 방지합니다.\n* **인증 및 권한 부여 강화:** 강력한 인증 및 권한 부여 메커니즘을 구축하여 무단 접근을 차단합니다.  OAuth 2.0, JWT 등을 활용합니다.\n* **암호화:** 민감한 데이터 (예: 사용자 비밀번호, API 키)를 안전하게 암호화하여 저장합니다.  bcrypt, Argon2 등의 안전한 암호화 알고리즘을 사용합니다.\n* **보안 취약점 분석 도구 활용:**  bandit, snyk 등의 도구를 사용하여 코드 내 보안 취약점을 주기적으로 검사하고 수정합니다.\n* **보안 업데이트:** 사용하는 라이브러리 및 프레임워크를 최신 버전으로 유지하여 알려진 보안 취약점을 방지합니다.\n* **보안 정책 수립:**  프로젝트의 보안 정책을 수립하고, 개발팀 전체가 보안 정책을 준수하도록 교육합니다.\n* **OWASP Top 10:** OWASP Top 10과 같은 웹 애플리케이션 보안 취약점 목록을 참고하여 보안 취약점을 예방합니다.\n\n**결론:**\n\n전반적으로 개선의 여지가 많은 프로젝트입니다. 위에서 제시된 분석 내용을 바탕으로 우선순위에 따라 문제점을 해결하고, 코드 아키텍처 개선, 성능 최적화, 보안 강화 노력을 꾸준히 기울인다면 코드 품질을 크게 향상시킬 수 있을 것입니다. 코드 품질 분석 도구를 적극적으로 활용하고, 코드 리뷰를 통해 지속적으로 코드 품질을 관리하는 것이 중요합니다.\n",
  "recommendations": [
    "높은 복잡도 파일 44개 리팩토링 필요",
    "총 36개의 코드 스멜 해결 필요",
    "총 4개의 보안 이슈 해결 필요",
    "낮은 유지보수성 파일 38개 개선 필요"
  ],
  "trend_analysis": "품질 점수가 0.0에서 5.6로 개선되었습니다."
}