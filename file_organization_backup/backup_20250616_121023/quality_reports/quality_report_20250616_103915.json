{
  "timestamp": "2025-06-16T10:39:15.723523",
  "overall_score": 5.62,
  "file_metrics": [
    {
      "file_path": "advanced_trader.py",
      "lines_of_code": 58,
      "complexity": 2,
      "maintainability_index": 90.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "analyze.py",
      "lines_of_code": 20,
      "complexity": 3,
      "maintainability_index": 92.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "auto.py",
      "lines_of_code": 10,
      "complexity": 2,
      "maintainability_index": 95.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "auto_backtest.py",
      "lines_of_code": 149,
      "complexity": 16,
      "maintainability_index": 53.1,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (10개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "auto_quality_service.py",
      "lines_of_code": 316,
      "complexity": 34,
      "maintainability_index": 0.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "backtest.py",
      "lines_of_code": 195,
      "complexity": 24,
      "maintainability_index": 32.5,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (28개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "backtest_mixed.py",
      "lines_of_code": 47,
      "complexity": 5,
      "maintainability_index": 85.3,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (6개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "buffett_screener.py",
      "lines_of_code": 77,
      "complexity": 8,
      "maintainability_index": 76.3,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "buy.py",
      "lines_of_code": 54,
      "complexity": 6,
      "maintainability_index": 82.6,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "config.py",
      "lines_of_code": 71,
      "complexity": 3,
      "maintainability_index": 86.9,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (7개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "cycle.py",
      "lines_of_code": 62,
      "complexity": 15,
      "maintainability_index": 63.8,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (6개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "daytrader_screener.py",
      "lines_of_code": 62,
      "complexity": 10,
      "maintainability_index": 73.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "debug_gemini.py",
      "lines_of_code": 36,
      "complexity": 7,
      "maintainability_index": 82.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "fetch_and_backtest.py",
      "lines_of_code": 49,
      "complexity": 4,
      "maintainability_index": 87.1,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (9개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "full_cycle_test.py",
      "lines_of_code": 244,
      "complexity": 31,
      "maintainability_index": 13.6,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (8개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "kis_api.py",
      "lines_of_code": 564,
      "complexity": 64,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (13개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "kis_api_client.py",
      "lines_of_code": 155,
      "complexity": 10,
      "maintainability_index": 64.5,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (9개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "kis_trading_system.py",
      "lines_of_code": 68,
      "complexity": 9,
      "maintainability_index": 75.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "main.py",
      "lines_of_code": 58,
      "complexity": 9,
      "maintainability_index": 76.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "market_analyzer.py",
      "lines_of_code": 455,
      "complexity": 61,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (26개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "minervini_screener.py",
      "lines_of_code": 82,
      "complexity": 7,
      "maintainability_index": 77.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "monday_auto.py",
      "lines_of_code": 26,
      "complexity": 4,
      "maintainability_index": 89.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "oneil_scanner.py",
      "lines_of_code": 275,
      "complexity": 37,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (8개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "portfolio.py",
      "lines_of_code": 156,
      "complexity": 14,
      "maintainability_index": 56.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "quality_analyzer.py",
      "lines_of_code": 491,
      "complexity": 70,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "중복된 메인 블록"
      ],
      "security_issues": [
        "SQL 인젝션 위험 가능성",
        "eval() 함수 사용으로 인한 보안 위험"
      ],
      "performance_issues": []
    },
    {
      "file_path": "run.py",
      "lines_of_code": 21,
      "complexity": 4,
      "maintainability_index": 89.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "run_analysis.py",
      "lines_of_code": 96,
      "complexity": 26,
      "maintainability_index": 38.4,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (9개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "run_quality_check.py",
      "lines_of_code": 45,
      "complexity": 6,
      "maintainability_index": 83.5,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "run_test_now.py",
      "lines_of_code": 37,
      "complexity": 4,
      "maintainability_index": 88.3,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "scalping_trader.py",
      "lines_of_code": 215,
      "complexity": 40,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (10개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "secure_config.py",
      "lines_of_code": 21,
      "complexity": 2,
      "maintainability_index": 93.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "sell.py",
      "lines_of_code": 90,
      "complexity": 13,
      "maintainability_index": 65.0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (6개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "simple_test.py",
      "lines_of_code": 105,
      "complexity": 13,
      "maintainability_index": 63.5,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "system_check.py",
      "lines_of_code": 19,
      "complexity": 2,
      "maintainability_index": 94.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test.py",
      "lines_of_code": 41,
      "complexity": 4,
      "maintainability_index": 87.9,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (13개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test_buy.py",
      "lines_of_code": 30,
      "complexity": 4,
      "maintainability_index": 89.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test_improved.py",
      "lines_of_code": 750,
      "complexity": 75,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (65개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test_sell.py",
      "lines_of_code": 114,
      "complexity": 14,
      "maintainability_index": 60.6,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (6개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "test_simple.py",
      "lines_of_code": 140,
      "complexity": 19,
      "maintainability_index": 48.0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (38개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trade.py",
      "lines_of_code": 337,
      "complexity": 27,
      "maintainability_index": 12.3,
      "test_coverage": 0.0,
      "code_smells": [
        "긴 함수 발견 (50줄 초과)",
        "긴 함수 발견 (50줄 초과)",
        "매직 넘버 과다 사용 (14개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trader.py",
      "lines_of_code": 982,
      "complexity": 174,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (49개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "zapier_mcp_server.py",
      "lines_of_code": 14,
      "complexity": 2,
      "maintainability_index": 94.6,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "analysis\\gemini_analyzer.py",
      "lines_of_code": 107,
      "complexity": 9,
      "maintainability_index": 71.3,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "analysis\\market_analyzer.py",
      "lines_of_code": 129,
      "complexity": 22,
      "maintainability_index": 43.1,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (7개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "analysis\\__init__.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "data\\fetcher.py",
      "lines_of_code": 364,
      "complexity": 62,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (51개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "data\\preprocess.py",
      "lines_of_code": 9,
      "complexity": 1,
      "maintainability_index": 97.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "data\\__init__.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "reporting\\reporter.py",
      "lines_of_code": 148,
      "complexity": 21,
      "maintainability_index": 43.2,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (16개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\config.py",
      "lines_of_code": 46,
      "complexity": 3,
      "maintainability_index": 89.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\main.py",
      "lines_of_code": 71,
      "complexity": 10,
      "maintainability_index": 72.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\simple_trader.py",
      "lines_of_code": 92,
      "complexity": 10,
      "maintainability_index": 70.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\base_strategy.py",
      "lines_of_code": 65,
      "complexity": 6,
      "maintainability_index": 81.5,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\fibonacci_strategy.py",
      "lines_of_code": 199,
      "complexity": 29,
      "maintainability_index": 22.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\scout_strategy.py",
      "lines_of_code": 180,
      "complexity": 24,
      "maintainability_index": 34.0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (11개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\strategy_executor.py",
      "lines_of_code": 253,
      "complexity": 32,
      "maintainability_index": 10.7,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\technical_analyzer.py",
      "lines_of_code": 136,
      "complexity": 30,
      "maintainability_index": 26.4,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (7개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategies\\__init__.py",
      "lines_of_code": 16,
      "complexity": 1,
      "maintainability_index": 96.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\gemini_signal.py",
      "lines_of_code": 52,
      "complexity": 7,
      "maintainability_index": 80.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\long_term_scanner.py",
      "lines_of_code": 38,
      "complexity": 9,
      "maintainability_index": 78.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\long_term_strategy.py",
      "lines_of_code": 56,
      "complexity": 12,
      "maintainability_index": 70.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [
        "SQL 인젝션 위험 가능성"
      ],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\prompts.py",
      "lines_of_code": 35,
      "complexity": 2,
      "maintainability_index": 92.5,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\short_term_scanner.py",
      "lines_of_code": 34,
      "complexity": 7,
      "maintainability_index": 82.6,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\short_term_strategy.py",
      "lines_of_code": 79,
      "complexity": 18,
      "maintainability_index": 56.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "strategy\\__init__.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "tests\\performance_analyzer.py",
      "lines_of_code": 140,
      "complexity": 13,
      "maintainability_index": 60.0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (8개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "tests\\run_backtest.py",
      "lines_of_code": 227,
      "complexity": 39,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (9개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trading\\executor.py",
      "lines_of_code": 81,
      "complexity": 8,
      "maintainability_index": 75.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trading\\kis_api.py",
      "lines_of_code": 190,
      "complexity": 25,
      "maintainability_index": 31.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trading\\trader.py",
      "lines_of_code": 169,
      "complexity": 36,
      "maintainability_index": 11.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "trading\\__init__.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\chart_generator.py",
      "lines_of_code": 79,
      "complexity": 9,
      "maintainability_index": 74.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\gspread_client.py",
      "lines_of_code": 88,
      "complexity": 12,
      "maintainability_index": 67.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\logger.py",
      "lines_of_code": 42,
      "complexity": 9,
      "maintainability_index": 77.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\parser.py",
      "lines_of_code": 21,
      "complexity": 3,
      "maintainability_index": 91.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\system_utils.py",
      "lines_of_code": 12,
      "complexity": 2,
      "maintainability_index": 94.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\telegram_bot.py",
      "lines_of_code": 72,
      "complexity": 15,
      "maintainability_index": 62.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\throttle.py",
      "lines_of_code": 16,
      "complexity": 2,
      "maintainability_index": 94.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "utils\\__init__.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\core\\data_manager.py",
      "lines_of_code": 46,
      "complexity": 4,
      "maintainability_index": 87.4,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (12개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\core\\notifier.py",
      "lines_of_code": 68,
      "complexity": 12,
      "maintainability_index": 69.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\core\\order_executor.py",
      "lines_of_code": 256,
      "complexity": 28,
      "maintainability_index": 18.4,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (11개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\core\\trader.py",
      "lines_of_code": 321,
      "complexity": 61,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\core\\__init__.py",
      "lines_of_code": 8,
      "complexity": 1,
      "maintainability_index": 97.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\monitoring\\advanced_monitor.py",
      "lines_of_code": 68,
      "complexity": 9,
      "maintainability_index": 75.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\strategies\\fibonacci_strategy.py",
      "lines_of_code": 32,
      "complexity": 5,
      "maintainability_index": 86.8,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\strategies\\scout_strategy.py",
      "lines_of_code": 68,
      "complexity": 9,
      "maintainability_index": 75.2,
      "test_coverage": 0.0,
      "code_smells": [
        "매직 넘버 과다 사용 (21개)"
      ],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\strategies\\technical_analyzer.py",
      "lines_of_code": 74,
      "complexity": 6,
      "maintainability_index": 80.6,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\strategies\\__init__.py",
      "lines_of_code": 7,
      "complexity": 1,
      "maintainability_index": 97.3,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\utils\\helpers.py",
      "lines_of_code": 11,
      "complexity": 2,
      "maintainability_index": 94.9,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\utils\\logger.py",
      "lines_of_code": 53,
      "complexity": 5,
      "maintainability_index": 84.7,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": "src\\utils\\__init__.py",
      "lines_of_code": 6,
      "complexity": 1,
      "maintainability_index": 97.4,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\advanced_ai_reviewer.py",
      "lines_of_code": 280,
      "complexity": 43,
      "maintainability_index": 0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\ai_code_analyzer.py",
      "lines_of_code": 134,
      "complexity": 25,
      "maintainability_index": 36.6,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\ai_reviewer.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\auto_refactor.py",
      "lines_of_code": 158,
      "complexity": 31,
      "maintainability_index": 22.2,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\code_structure_analyzer.py",
      "lines_of_code": 279,
      "complexity": 34,
      "maintainability_index": 4.1,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    },
    {
      "file_path": ".github\\scripts\\quality_check.py",
      "lines_of_code": 0,
      "complexity": 1,
      "maintainability_index": 0.0,
      "test_coverage": 0.0,
      "code_smells": [],
      "security_issues": [],
      "performance_issues": []
    }
  ],
  "gemini_analysis": "## Python 프로젝트 코드 품질 분석 결과 보고서\n\n제공된 데이터를 바탕으로 Python 프로젝트의 코드 품질을 분석한 결과는 다음과 같습니다.\n\n\n**1. 전체적인 코드 품질 평가 (1-10점): 5점**\n\n총 코드 라인 수는 상당히 많고(11952 라인), 평균 복잡도(16.9)가 높으며, 코드 스멜(33개)과 보안 이슈(3개)가 존재합니다. 평균 유지보수성(55.62)도 높은 편으로, 유지보수 및 확장에 어려움이 예상됩니다.  특히, 몇몇 파일의 복잡도가 매우 높게 나타나 전체적인 코드 품질을 낮추고 있습니다. 따라서 5점으로 평가합니다.  개선을 위한 노력이 절실합니다.\n\n\n**2. 주요 문제점과 개선 방향:**\n\n* **높은 복잡도:** `trader.py`의 복잡도(174)가 압도적으로 높습니다.  이는 함수의 기능이 너무 광범위하거나, 중복된 로직이 존재하거나, 제어 흐름이 복잡하게 얽혀있음을 의미합니다.  다른 파일들 (`test_improved.py`, `quality_analyzer.py`, `kis_api.py`, `data\\fetcher.py`) 역시 복잡도가 높아 리팩토링이 필요합니다.  **개선 방향:** 함수를 작고 단일 목적의 함수로 분해하고, 책임을 명확히 분리하여 코드를 모듈화합니다.  중복 코드를 제거하고, 적절한 디자인 패턴을 적용하여 코드 구조를 개선합니다.\n\n* **코드 스멜:** 33개의 코드 스멜은 코드의 가독성과 유지보수성을 저해하는 요소들입니다.  **개선 방향:** 정적 분석 도구(예: Pylint, Flake8)를 활용하여 코드 스멜을 찾아 수정합니다.  코드 리뷰를 통해 다른 개발자의 의견을 수렴하고, 코드 스타일 가이드라인을 준수합니다.\n\n* **보안 이슈:** 3개의 보안 이슈는 심각한 문제입니다.  **개선 방향:**  보안 취약점 분석 도구를 사용하여 보안 이슈를 정확히 파악하고,  취약점을 수정해야 합니다.  입력값 검증,  출력값 암호화,  권한 관리 등 보안 최적화를 수행해야 합니다. `quality_analyzer.py`에 보안 이슈가 집중되어 있으므로, 이 파일을 우선적으로 검토해야 합니다.\n\n* **파일 수:** 98개의 파일은 프로젝트 규모가 상당함을 의미합니다. 파일의 분리와 관리에 대한 전략이 필요합니다. 과도한 파일 수는 프로젝트 관리의 어려움으로 이어질 수 있습니다.\n\n\n**3. 우선순위별 리팩토링 권장사항:**\n\n1. **`trader.py` 리팩토링:** 가장 높은 복잡도를 가진 파일이므로 최우선적으로 리팩토링해야 합니다.  함수 분해, 책임 분리, 중복 코드 제거 등을 통해 코드를 단순화합니다.\n2. **`quality_analyzer.py` 리팩토링 및 보안 취약점 수정:** 보안 이슈가 존재하므로, 복잡도 해결과 함께 보안 문제를 해결해야 합니다.\n3. **`test_improved.py`, `kis_api.py`, `data\\fetcher.py` 리팩토링:**  높은 복잡도를 가진 파일들을 순차적으로 리팩토링합니다.\n4. **코드 스멜 제거:** 정적 분석 도구를 활용하여 코드 스멜을 체계적으로 제거합니다.\n5. **코드 리뷰 및 코드 스타일 가이드라인 적용:**  주기적인 코드 리뷰를 통해 코드 품질을 지속적으로 개선합니다.\n\n\n**4. 코드 아키텍처 개선 제안:**\n\n* **모듈화:** 기능별로 모듈을 분리하여 코드를 관리하고 재사용성을 높입니다.  관련 기능들을 하나의 모듈로 묶고, 명확한 인터페이스를 정의합니다.\n* **계층 구조 설계:**  프레젠테이션 계층, 비즈니스 로직 계층, 데이터 접근 계층 등으로 계층을 분리하여 코드의 유지보수성과 확장성을 높입니다.\n* **디자인 패턴 적용:**  적절한 디자인 패턴(예: MVC, MVVM)을 적용하여 코드의 구조를 개선하고,  코드의 재사용성과 유지보수성을 향상시킵니다.\n* **Dependency Injection:** 의존성 주입을 활용하여 모듈 간의 결합도를 낮추고, 테스트 용이성을 높입니다.\n\n\n**5. 성능 최적화 방안:**\n\n* **프로파일링:**  프로파일링 도구(예: cProfile)를 사용하여 성능 병목 지점을 찾습니다.\n* **알고리즘 최적화:**  비효율적인 알고리즘을 개선하여 성능을 향상시킵니다.\n* **데이터 구조 최적화:**  적절한 데이터 구조(예: NumPy)를 사용하여 데이터 처리 속도를 높입니다.\n* **메모리 관리:** 메모리 누수를 방지하고, 불필요한 메모리 사용을 줄입니다.\n\n\n**6. 보안 강화 방안:**\n\n* **입력 검증:**  사용자 입력값을 엄격하게 검증하여 보안 취약점을 예방합니다.\n* **출력 암호화:**  민감한 정보는 암호화하여 보호합니다.\n* **권한 관리:**  적절한 권한 관리 시스템을 구축하여 보안을 강화합니다.\n* **정기적인 보안 점검:**  정기적으로 보안 점검을 수행하고,  발견된 취약점을 신속하게 수정합니다.\n* **의존성 관리:**  외부 라이브러리의 보안 취약점을 주기적으로 확인하고, 최신 버전으로 업데이트합니다.\n\n\n이 분석 결과를 바탕으로 단계적으로 코드 품질을 개선하여 프로젝트의 안정성과 유지보수성을 향상시키는 것이 중요합니다.  특히 `trader.py`와 `quality_analyzer.py`는 즉각적인 개선이 필요합니다.  코드 리뷰 및 정적 분석 도구 사용은 필수적이며,  단순히 버그 수정뿐 아니라 코드 구조 개선에 중점을 두어야 합니다.\n",
  "recommendations": [
    "높은 복잡도 파일 41개 리팩토링 필요",
    "총 33개의 코드 스멜 해결 필요",
    "총 3개의 보안 이슈 해결 필요",
    "낮은 유지보수성 파일 36개 개선 필요"
  ],
  "trend_analysis": "품질 점수가 안정적으로 유지되고 있습니다."
}